Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    gpio.o(i.GPIO_init) refers to gpio_cfg.o(.data) for PinConfig_array
    main.o(i.Button1_Task) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(i.Button1_Task) refers to gpio.o(i.GPIO_read) for GPIO_read
    main.o(i.Button1_Task) refers to strcpy.o(.text) for strcpy
    main.o(i.Button1_Task) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.Button1_Task) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.Button1_Task) refers to main.o(.data) for Queue1Handeller
    main.o(i.Button2_Task) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(i.Button2_Task) refers to gpio.o(i.GPIO_read) for GPIO_read
    main.o(i.Button2_Task) refers to strcpy.o(.text) for strcpy
    main.o(i.Button2_Task) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.Button2_Task) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.Button2_Task) refers to main.o(.data) for Queue1Handeller
    main.o(i.String_Task) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    main.o(i.String_Task) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.String_Task) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.String_Task) refers to main.o(.constdata) for .constdata
    main.o(i.String_Task) refers to main.o(.data) for Queue1Handeller
    main.o(i.UART_Task) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(i.UART_Task) refers to queue.o(i.xQueueReceive) for xQueueReceive
    main.o(i.UART_Task) refers to serial.o(i.vSerialPutString) for vSerialPutString
    main.o(i.UART_Task) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.UART_Task) refers to main.o(.data) for Queue1Handeller
    main.o(i.main) refers to main.o(i.prvSetupHardware) for prvSetupHardware
    main.o(i.main) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for Queue1Handeller
    main.o(i.main) refers to main.o(i.Button1_Task) for Button1_Task
    main.o(i.main) refers to main.o(i.Button2_Task) for Button2_Task
    main.o(i.main) refers to main.o(i.String_Task) for String_Task
    main.o(i.main) refers to main.o(i.UART_Task) for UART_Task
    main.o(i.prvSetupHardware) refers to serial.o(i.xSerialPortInitMinimal) for xSerialPortInitMinimal
    main.o(i.prvSetupHardware) refers to gpio.o(i.GPIO_init) for GPIO_init
    serial.o(i.vSerialPutString) refers to serial.o(i.xSerialPutChar) for xSerialPutChar
    serial.o(i.vSerialPutString) refers to serial.o(.data) for txDataSizeLeftToSend
    serial.o(i.vSerialPutString) refers to serial.o(.bss) for txBuffer
    serial.o(i.vUART_ISRHandler) refers to serial.o(.data) for txDataSizeLeftToSend
    serial.o(i.vUART_ISRHandler) refers to serial.o(.bss) for txBuffer
    serial.o(i.xSerialGetChar) refers to serial.o(.data) for isNewCharAvailable
    serial.o(i.xSerialPortInitMinimal) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    serial.o(i.xSerialPortInitMinimal) refers to serialisr.o(.text) for vUART_ISREntry
    serialisr.o(.text) refers to port.o(.data) for ulCriticalNesting
    serialisr.o(.text) refers to tasks.o(.data) for pxCurrentTCB
    serialisr.o(.text) refers to serial.o(i.vUART_ISRHandler) for vUART_ISRHandler
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_2.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueGenericCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSend) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeek) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceive) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.prvInitialiseNewTask) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTasksWithinSingleList) refers to tasks.o(i.vTaskGetInfo) for vTaskGetInfo
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskGenericNotifyTake) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.vTaskGetInfo) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetApplicationTaskTag) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetApplicationTaskTag) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetApplicationTaskTag) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCallApplicationTaskHook) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for xPendedTicks
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskDelayUntil) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskGenericNotifyWait) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetApplicationTaskTag) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGetApplicationTaskTag) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGetApplicationTaskTag) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetApplicationTaskTagFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.data) for xStart
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(i.prvHeapInit) for prvHeapInit
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(.data) for xHeapHasBeenInitialised
    heap_2.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.vPortFree) refers to heap_2.o(.data) for xStart
    heap_2.o(i.xPortGetFreeHeapSize) refers to heap_2.o(.data) for xFreeBytesRemaining
    port.o(i.prvSetupTimerInterrupt) refers to port.o(i.vNonPreemptiveTick) for vNonPreemptiveTick
    port.o(i.vNonPreemptiveTick) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.vPortEnterCritical) refers to port.o(.data) for ulCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for ulCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.prvSetupTimerInterrupt) for prvSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    portasm.o(PORT_ASM) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div2
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div2
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing gpio.o(i.GPIO_write), (180 bytes).
    Removing serial.o(i.xSerialGetChar), (76 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (40 bytes).
    Removing queue.o(i.prvInitialiseMutex), (60 bytes).
    Removing queue.o(i.ucQueueGetQueueType), (12 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (32 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (16 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (44 bytes).
    Removing queue.o(i.vQueueDelete), (28 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(i.xQueueCreateMutex), (56 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (196 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (164 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (36 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(i.xQueuePeek), (352 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (76 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (176 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (432 bytes).
    Removing tasks.o(i.eTaskGetState), (240 bytes).
    Removing tasks.o(i.pcTaskGetName), (44 bytes).
    Removing tasks.o(i.prvListTasksWithinSingleList), (188 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (132 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (56 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyTake), (212 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyValueClear), (96 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (16 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (252 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (32 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (64 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (48 bytes).
    Removing tasks.o(i.vTaskDelete), (244 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (44 bytes).
    Removing tasks.o(i.vTaskGenericNotifyGiveFromISR), (252 bytes).
    Removing tasks.o(i.vTaskGetInfo), (236 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (76 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (232 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (332 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (156 bytes).
    Removing tasks.o(i.vTaskResume), (152 bytes).
    Removing tasks.o(i.vTaskSetApplicationTaskTag), (60 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (20 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (56 bytes).
    Removing tasks.o(i.vTaskSuspend), (268 bytes).
    Removing tasks.o(i.xTaskCallApplicationTaskHook), (92 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (56 bytes).
    Removing tasks.o(i.xTaskDelayUntil), (160 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (340 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (440 bytes).
    Removing tasks.o(i.xTaskGenericNotifyStateClear), (104 bytes).
    Removing tasks.o(i.xTaskGenericNotifyWait), (264 bytes).
    Removing tasks.o(i.xTaskGetApplicationTaskTag), (64 bytes).
    Removing tasks.o(i.xTaskGetApplicationTaskTagFromISR), (48 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (16 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (36 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (292 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (208 bytes).
    Removing heap_2.o(i.vPortInitialiseBlocks), (4 bytes).
    Removing heap_2.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing port.o(i.vPortEndScheduler), (4 bytes).

64 unused section(s) (total 7804 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'strcpy' from main.o(i.Button1_Task).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

5 Veneer(s) (total 36 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    FreeRTOS_Source\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS_Source\portable\MemMang\heap_2.c 0x00000000   Number         0  heap_2.o ABSOLUTE
    FreeRTOS_Source\portable\RVDS\ARM7_LPC21xx\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS_Source\portable\RVDS\ARM7_LPC21xx\portASM.s 0x00000000   Number         0  portasm.o ABSOLUTE
    FreeRTOS_Source\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS_Source\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    header\serialISR.s                       0x00000000   Number         0  serialisr.o ABSOLUTE
    source\GPIO.c                            0x00000000   Number         0  gpio.o ABSOLUTE
    source\GPIO_cfg.c                        0x00000000   Number         0  gpio_cfg.o ABSOLUTE
    source\main.c                            0x00000000   Number         0  main.o ABSOLUTE
    source\serial.c                          0x00000000   Number         0  serial.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000001a6   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000001bc   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000001c0   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000001c8   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001c8   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001c8   Section        8  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d0   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d4   Section       40  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000200   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000204   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000204   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000208   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000210   Section       32  startup.o(.text)
    .text                                    0x00000230   Section      148  serialisr.o(.text)
    .text                                    0x000002cc   Section        0  strcpy.o(.text)
    .text                                    0x0000031c   Section      212  rt_memcpy.o(.text)
    .text                                    0x000003f0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000454   Section       16  aeabi_memset.o(.text)
    .text                                    0x00000464   Section       84  rt_memclr_w.o(.text)
    .text                                    0x000004b8   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x000004e4   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div5                               0x00000508   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div2                               0x0000052c   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x00000568   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x00000638   Section        0  heapauxi.o(.text)
    .text                                    0x00000640   Section       64  rt_memclr.o(.text)
    .text                                    0x00000680   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x000006e0   Section        0  exit.o(.text)
    .text                                    0x000006f4   Section       12  libspace.o(.text)
    .text                                    0x00000708   Section        0  sys_exit.o(.text)
    .text                                    0x00000714   Section        4  use_no_semi.o(.text)
    .text                                    0x00000718   Section        0  indicate_semi.o(.text)
    .text_udiv                               0x00000718   Section       36  aeabi_sdiv.o(.text_udiv)
    PORT_ASM                                 0x0000073c   Section      396  portasm.o(PORT_ASM)
    i.Button1_Task                           0x000008c8   Section        0  main.o(i.Button1_Task)
    i.Button2_Task                           0x000009a4   Section        0  main.o(i.Button2_Task)
    i.GPIO_init                              0x00000a80   Section        0  gpio.o(i.GPIO_init)
    i.GPIO_read                              0x00000bf0   Section        0  gpio.o(i.GPIO_read)
    i.String_Task                            0x00000c44   Section        0  main.o(i.String_Task)
    i.UART_Task                              0x00000c88   Section        0  main.o(i.UART_Task)
    i.main                                   0x00000cd4   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x00000dec   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x00000dec   ARM Code     184  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00000ebc   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00000ebc   ARM Code     252  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x00000fd0   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000fd0   ARM Code     108  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x00001048   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x00001048   ARM Code      88  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x000010a0   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x000010a0   ARM Code     240  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00001190   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00001190   ARM Code      32  tasks.o(i.prvDeleteTCB)
    i.prvHeapInit                            0x000011b0   Section        0  heap_2.o(i.prvHeapInit)
    prvHeapInit                              0x000011b0   ARM Code      72  heap_2.o(i.prvHeapInit)
    i.prvIdleTask                            0x00001208   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00001208   ARM Code      16  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x00001218   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x00001218   ARM Code      76  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x00001264   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x00001264   ARM Code     264  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x0000136c   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x0000136c   ARM Code     112  tasks.o(i.prvInitialiseTaskLists)
    i.prvIsQueueEmpty                        0x000013fc   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x000013fc   ARM Code      52  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00001430   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00001430   ARM Code      56  queue.o(i.prvIsQueueFull)
    i.prvResetNextTaskUnblockTime            0x00001468   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00001468   ARM Code      84  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSetupHardware                       0x000014c4   Section        0  main.o(i.prvSetupHardware)
    prvSetupHardware                         0x000014c4   ARM Code      36  main.o(i.prvSetupHardware)
    i.prvSetupTimerInterrupt                 0x000014f0   Section        0  port.o(i.prvSetupTimerInterrupt)
    prvSetupTimerInterrupt                   0x000014f0   ARM Code     100  port.o(i.prvSetupTimerInterrupt)
    i.prvUnlockQueue                         0x00001560   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00001560   ARM Code     232  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00001648   Section        0  heap_2.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x000017b0   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x000018b4   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x00001900   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x0000192c   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00001938   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00001998   Section        0  list.o(i.vListInsertEnd)
    i.vNonPreemptiveTick                     0x000019c8   Section        0  port.o(i.vNonPreemptiveTick)
    i.vPortEnterCritical                     0x000019f0   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00001a18   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00001a60   Section        0  heap_2.o(i.vPortFree)
    i.vSerialPutString                       0x00001ad8   Section        0  serial.o(i.vSerialPutString)
    i.vTaskDelay                             0x00001b88   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x00001bc8   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x00001bec   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00001c00   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskStartScheduler                    0x00001c38   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x00001cd0   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x00001cec   Section        0  tasks.o(i.vTaskSwitchContext)
    i.vUART_ISRHandler                       0x00001db8   Section        0  serial.o(i.vUART_ISRHandler)
    i.xPortStartScheduler                    0x00001ec0   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x00001ed8   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x00001f2c   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x00001fdc   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueReceive                          0x00002144   Section        0  queue.o(i.xQueueReceive)
    i.xSerialPortInitMinimal                 0x000022a4   Section        0  serial.o(i.xSerialPortInitMinimal)
    i.xSerialPutChar                         0x00002374   Section        0  serial.o(i.xSerialPutChar)
    i.xTaskCheckForTimeOut                   0x00002384   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00002434   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskIncrementTick                     0x000024e0   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x0000266c   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00002718   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x000027e4   Section        0  tasks.o(i.xTaskResumeAll)
    .constdata                               0x00002950   Section       25  main.o(.constdata)
    .data                                    0x40000000   Section       92  gpio_cfg.o(.data)
    .data                                    0x4000005c   Section       20  main.o(.data)
    .data                                    0x40000070   Section        4  serial.o(.data)
    .data                                    0x40000074   Section       64  tasks.o(.data)
    pxDelayedTaskList                        0x40000078   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x4000007c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000080   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000084   Data           4  tasks.o(.data)
    xTickCount                               0x40000088   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x4000008c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000090   Data           4  tasks.o(.data)
    xPendedTicks                             0x40000094   Data           4  tasks.o(.data)
    xYieldPending                            0x40000098   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x4000009c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x400000a0   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x400000a4   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x400000a8   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x400000b0   Data           4  tasks.o(.data)
    .data                                    0x400000b4   Section       24  heap_2.o(.data)
    xStart                                   0x400000b4   Data           8  heap_2.o(.data)
    xEnd                                     0x400000bc   Data           8  heap_2.o(.data)
    xFreeBytesRemaining                      0x400000c4   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x400000c8   Data           4  heap_2.o(.data)
    .data                                    0x400000cc   Section        4  port.o(.data)
    .bss                                     0x400000d0   Section      200  serial.o(.bss)
    .bss                                     0x40000198   Section      180  tasks.o(.bss)
    pxReadyTasksLists                        0x40000198   Data          80  tasks.o(.bss)
    xDelayedTaskList1                        0x400001e8   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x400001fc   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x40000210   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x40000224   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x40000238   Data          20  tasks.o(.bss)
    .bss                                     0x4000024c   Section    13312  heap_2.o(.bss)
    ucHeap                                   0x4000024c   Data       13312  heap_2.o(.bss)
    .bss                                     0x4000364c   Section       96  libspace.o(.bss)
    HEAP                                     0x400036b0   Section        0  startup.o(HEAP)
    STACK                                    0x400036b0   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x400036b0   Data           0  startup.o(HEAP)
    Stack_Mem                                0x400036b0   Data        1568  startup.o(STACK)
    Stack_Top                                0x40003cd0   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b4   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001bd   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000001c8   ARM Code       0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001c8   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001c8   ARM Code       0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x000001fd   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000200   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x00000210   ARM Code       0  startup.o(.text)
    vUART_ISREntry                           0x00000230   ARM Code       0  serialisr.o(.text)
    Inline ARM to Thumb Veneer to strcpy     0x000002c4   ARM Code       8  strcpy.o(.text)
    strcpy                                   0x000002cd   Thumb Code    74  strcpy.o(.text)
    __aeabi_memcpy                           0x0000031c   ARM Code       0  rt_memcpy.o(.text)
    __rt_memcpy                              0x0000031c   ARM Code     212  rt_memcpy.o(.text)
    _memcpy_lastbytes                        0x000003d0   ARM Code       0  rt_memcpy.o(.text)
    __aeabi_memcpy4                          0x000003f0   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000003f0   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000003f0   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000043c   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memset                           0x00000454   ARM Code      16  aeabi_memset.o(.text)
    __aeabi_memclr4                          0x00000464   ARM Code       0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000464   ARM Code       0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000464   ARM Code      84  rt_memclr_w.o(.text)
    _memset_w                                0x00000468   ARM Code       0  rt_memclr_w.o(.text)
    __aeabi_idiv                             0x000004b8   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x000004b8   ARM Code     384  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x00000639   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000063b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000063d   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memclr                           0x00000640   ARM Code       0  rt_memclr.o(.text)
    __rt_memclr                              0x00000640   ARM Code      64  rt_memclr.o(.text)
    _memset                                  0x00000644   ARM Code       0  rt_memclr.o(.text)
    __user_setup_stackheap                   0x00000680   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x000006e1   Thumb Code    20  exit.o(.text)
    __user_libspace                          0x000006f4   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x000006f4   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x000006f4   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x00000700   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x00000709   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000714   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000714   ARM Code       4  use_no_semi.o(.text)
    __aeabi_uidiv                            0x00000718   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x00000718   ARM Code      36  aeabi_sdiv.o(.text_udiv)
    __semihosting_library_function           0x00000718   ARM Code       0  indicate_semi.o(.text)
    vPortStartFirstTask                      0x0000073c   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x0000076c   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x00000774   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x00000800   ARM Code       0  portasm.o(PORT_ASM)
    Button1_Task                             0x000008c8   ARM Code     168  main.o(i.Button1_Task)
    Button2_Task                             0x000009a4   ARM Code     168  main.o(i.Button2_Task)
    GPIO_init                                0x00000a80   ARM Code     356  gpio.o(i.GPIO_init)
    GPIO_read                                0x00000bf0   ARM Code      80  gpio.o(i.GPIO_read)
    String_Task                              0x00000c44   ARM Code      60  main.o(i.String_Task)
    UART_Task                                0x00000c88   ARM Code      72  main.o(i.UART_Task)
    main                                     0x00000cd4   ARM Code     188  main.o(i.main)
    pvPortMalloc                             0x00001648   ARM Code     344  heap_2.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x000017b0   ARM Code     240  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x000018b4   ARM Code      76  list.o(i.uxListRemove)
    vListInitialise                          0x00001900   ARM Code      44  list.o(i.vListInitialise)
    vListInitialiseItem                      0x0000192c   ARM Code      12  list.o(i.vListInitialiseItem)
    vListInsert                              0x00001938   ARM Code      96  list.o(i.vListInsert)
    vListInsertEnd                           0x00001998   ARM Code      48  list.o(i.vListInsertEnd)
    vNonPreemptiveTick                       0x000019c8   ARM Code      36  port.o(i.vNonPreemptiveTick)
    vPortEnterCritical                       0x000019f0   ARM Code      36  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00001a18   ARM Code      68  port.o(i.vPortExitCritical)
    vPortFree                                0x00001a60   ARM Code     112  heap_2.o(i.vPortFree)
    vSerialPutString                         0x00001ad8   ARM Code     164  serial.o(i.vSerialPutString)
    vTaskDelay                               0x00001b88   ARM Code      64  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001bc8   ARM Code      28  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001bec   ARM Code      16  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001c00   ARM Code      52  tasks.o(i.vTaskPlaceOnEventList)
    vTaskStartScheduler                      0x00001c38   ARM Code     120  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x00001cd0   ARM Code      24  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001cec   ARM Code     184  tasks.o(i.vTaskSwitchContext)
    vUART_ISRHandler                         0x00001db8   ARM Code     240  serial.o(i.vUART_ISRHandler)
    xPortStartScheduler                      0x00001ec0   ARM Code      24  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x00001ed8   ARM Code      84  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x00001f2c   ARM Code     176  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x00001fdc   ARM Code     360  queue.o(i.xQueueGenericSend)
    xQueueReceive                            0x00002144   ARM Code     352  queue.o(i.xQueueReceive)
    xSerialPortInitMinimal                   0x000022a4   ARM Code     192  serial.o(i.xSerialPortInitMinimal)
    xSerialPutChar                           0x00002374   ARM Code      12  serial.o(i.xSerialPutChar)
    xTaskCheckForTimeOut                     0x00002384   ARM Code     168  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002434   ARM Code     172  tasks.o(i.xTaskCreate)
    xTaskIncrementTick                       0x000024e0   ARM Code     360  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0000266c   ARM Code     164  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00002718   ARM Code     180  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000027e4   ARM Code     332  tasks.o(i.xTaskResumeAll)
    Region$$Table$$Base                      0x0000296c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000298c   Number         0  anon$$obj.o(Region$$Table)
    PinConfig_array                          0x40000000   Data          90  gpio_cfg.o(.data)
    PinConfig_array_size                     0x4000005a   Data           2  gpio_cfg.o(.data)
    Button1TaskHandller                      0x4000005c   Data           4  main.o(.data)
    Button2TaskHandller                      0x40000060   Data           4  main.o(.data)
    StringTaskHandller                       0x40000064   Data           4  main.o(.data)
    UARTTaskHandller                         0x40000068   Data           4  main.o(.data)
    Queue1Handeller                          0x4000006c   Data           4  main.o(.data)
    receivedChar                             0x40000070   Data           1  serial.o(.data)
    isNewCharAvailable                       0x40000071   Data           1  serial.o(.data)
    txDataSizeToSend                         0x40000072   Data           1  serial.o(.data)
    txDataSizeLeftToSend                     0x40000073   Data           1  serial.o(.data)
    pxCurrentTCB                             0x40000074   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x400000ac   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x400000cc   Data           4  port.o(.data)
    txBuffer                                 0x400000d0   Data         200  serial.o(.bss)
    __libspace_start                         0x4000364c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x400036ac   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002a5c, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000298c, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000104   Code   RO            3    RESET               startup.o
    0x00000104   0x00000104   0x00000008   Code   RO          904  * !!!main             c_t.l(__main.o)
    0x0000010c   0x0000010c   0x0000003c   Code   RO         1075    !!!scatter          c_t.l(__scatter.o)
    0x00000148   0x00000148   0x00000028   Code   RO         1077    !!handler_copy      c_t.l(__scatter_copy.o)
    0x00000170   0x00000170   0x0000002c   Code   RO         1079    !!handler_zi        c_t.l(__scatter_zi.o)
    0x0000019c   0x0000019c   0x00000008   Ven    RO          943    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a4   0x000001a4   0x00000002   Code   RO          943    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          956    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          958    .ARM.Collect$$libinit$$00000004  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          961    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          963    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          965    .ARM.Collect$$libinit$$0000000E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          968    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          970    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          972    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          974    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          976    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          978    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          980    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          982    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          984    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          986    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          988    .ARM.Collect$$libinit$$00000025  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          992    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          994    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          996    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          998    .ARM.Collect$$libinit$$00000032  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x0000000c   Code   RO          999    .ARM.Collect$$libinit$$00000033  c_t.l(libinit2.o)
    0x000001b2   0x000001b2   0x00000002   PAD
    0x000001b4   0x000001b4   0x00000008   Ven    RO         1032    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001bc   0x000001bc   0x00000004   Code   RO         1032    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1058    .ARM.Collect$$libshutdown$$00000002  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1060    .ARM.Collect$$libshutdown$$00000004  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1063    .ARM.Collect$$libshutdown$$00000007  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1066    .ARM.Collect$$libshutdown$$0000000A  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1068    .ARM.Collect$$libshutdown$$0000000C  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO         1071    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000006   Code   RO         1072    .ARM.Collect$$libshutdown$$00000010  c_t.l(libshutdown2.o)
    0x000001c6   0x000001c6   0x00000002   PAD
    0x000001c8   0x000001c8   0x00000000   Code   RO          906    .ARM.Collect$$rtentry$$00000000  c_t.l(__rtentry.o)
    0x000001c8   0x000001c8   0x00000000   Code   RO          914    .ARM.Collect$$rtentry$$00000002  c_t.l(__rtentry2.o)
    0x000001c8   0x000001c8   0x00000008   Code   RO          926    .ARM.Collect$$rtentry$$00000004  c_t.l(__rtentry4.o)
    0x000001d0   0x000001d0   0x00000000   Code   RO          916    .ARM.Collect$$rtentry$$00000009  c_t.l(__rtentry2.o)
    0x000001d0   0x000001d0   0x00000004   Code   RO          917    .ARM.Collect$$rtentry$$0000000A  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000000   Code   RO          919    .ARM.Collect$$rtentry$$0000000C  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000028   Code   RO          920    .ARM.Collect$$rtentry$$0000000D  c_t.l(__rtentry2.o)
    0x000001fc   0x000001fc   0x00000004   Ven    RO          947    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000200   0x00000200   0x00000004   Code   RO          947    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000204   0x00000204   0x00000000   Code   RO         1003    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x00000204   0x00000204   0x00000004   Code   RO         1004    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x00000208   0x00000208   0x00000008   Code   RO         1005    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x00000210   0x00000210   0x00000020   Code   RO            4    .text               startup.o
    0x00000230   0x00000230   0x00000094   Code   RO          195    .text               serialisr.o
    0x000002c4   0x000002c4   0x00000008   Ven    RO          876    .text               c_t.l(strcpy.o)
    0x000002cc   0x000002cc   0x00000050   Code   RO          876    .text               c_t.l(strcpy.o)
    0x0000031c   0x0000031c   0x000000d4   Code   RO          878    .text               c_t.l(rt_memcpy.o)
    0x000003f0   0x000003f0   0x00000064   Code   RO          880    .text               c_t.l(rt_memcpy_w.o)
    0x00000454   0x00000454   0x00000010   Code   RO          882    .text               c_t.l(aeabi_memset.o)
    0x00000464   0x00000464   0x00000054   Code   RO          884    .text               c_t.l(rt_memclr_w.o)
    0x000004b8   0x000004b8   0x00000180   Code   RO          886    .text               c_t.l(aeabi_sdiv.o)
    0x00000638   0x00000638   0x00000006   Code   RO          902    .text               c_t.l(heapauxi.o)
    0x0000063e   0x0000063e   0x00000002   PAD
    0x00000640   0x00000640   0x00000040   Code   RO          911    .text               c_t.l(rt_memclr.o)
    0x00000680   0x00000680   0x00000060   Code   RO          930    .text               c_t.l(sys_stackheap_outer.o)
    0x000006e0   0x000006e0   0x00000014   Code   RO          932    .text               c_t.l(exit.o)
    0x000006f4   0x000006f4   0x0000000c   Code   RO          944    .text               c_t.l(libspace.o)
    0x00000700   0x00000700   0x00000008   Ven    RO         1000    .text               c_t.l(sys_exit.o)
    0x00000708   0x00000708   0x0000000c   Code   RO         1000    .text               c_t.l(sys_exit.o)
    0x00000714   0x00000714   0x00000004   Code   RO         1021    .text               c_t.l(use_no_semi.o)
    0x00000718   0x00000718   0x00000000   Code   RO         1023    .text               c_t.l(indicate_semi.o)
    0x00000718   0x00000718   0x00000024   Code   RO          887    .text_udiv          c_t.l(aeabi_sdiv.o)
    0x0000073c   0x0000073c   0x0000018c   Code   RO          871    PORT_ASM            portasm.o
    0x000008c8   0x000008c8   0x000000dc   Code   RO           64    i.Button1_Task      main.o
    0x000009a4   0x000009a4   0x000000dc   Code   RO           65    i.Button2_Task      main.o
    0x00000a80   0x00000a80   0x00000170   Code   RO           11    i.GPIO_init         gpio.o
    0x00000bf0   0x00000bf0   0x00000054   Code   RO           12    i.GPIO_read         gpio.o
    0x00000c44   0x00000c44   0x00000044   Code   RO           66    i.String_Task       main.o
    0x00000c88   0x00000c88   0x0000004c   Code   RO           67    i.UART_Task         main.o
    0x00000cd4   0x00000cd4   0x00000118   Code   RO           68    i.main              main.o
    0x00000dec   0x00000dec   0x000000d0   Code   RO          405    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000ebc   0x00000ebc   0x00000114   Code   RO          406    i.prvAddNewTaskToReadyList  tasks.o
    0x00000fd0   0x00000fd0   0x00000078   Code   RO          407    i.prvCheckTasksWaitingTermination  tasks.o
    0x00001048   0x00001048   0x00000058   Code   RO          234    i.prvCopyDataFromQueue  queue.o
    0x000010a0   0x000010a0   0x000000f0   Code   RO          235    i.prvCopyDataToQueue  queue.o
    0x00001190   0x00001190   0x00000020   Code   RO          408    i.prvDeleteTCB      tasks.o
    0x000011b0   0x000011b0   0x00000058   Code   RO          783    i.prvHeapInit       heap_2.o
    0x00001208   0x00001208   0x00000010   Code   RO          409    i.prvIdleTask       tasks.o
    0x00001218   0x00001218   0x0000004c   Code   RO          238    i.prvInitialiseNewQueue  queue.o
    0x00001264   0x00001264   0x00000108   Code   RO          410    i.prvInitialiseNewTask  tasks.o
    0x0000136c   0x0000136c   0x00000090   Code   RO          411    i.prvInitialiseTaskLists  tasks.o
    0x000013fc   0x000013fc   0x00000034   Code   RO          239    i.prvIsQueueEmpty   queue.o
    0x00001430   0x00001430   0x00000038   Code   RO          240    i.prvIsQueueFull    queue.o
    0x00001468   0x00001468   0x0000005c   Code   RO          413    i.prvResetNextTaskUnblockTime  tasks.o
    0x000014c4   0x000014c4   0x0000002c   Code   RO           69    i.prvSetupHardware  main.o
    0x000014f0   0x000014f0   0x00000070   Code   RO          821    i.prvSetupTimerInterrupt  port.o
    0x00001560   0x00001560   0x000000e8   Code   RO          241    i.prvUnlockQueue    queue.o
    0x00001648   0x00001648   0x00000168   Code   RO          784    i.pvPortMalloc      heap_2.o
    0x000017b0   0x000017b0   0x00000104   Code   RO          822    i.pxPortInitialiseStack  port.o
    0x000018b4   0x000018b4   0x0000004c   Code   RO          198    i.uxListRemove      list.o
    0x00001900   0x00001900   0x0000002c   Code   RO          199    i.vListInitialise   list.o
    0x0000192c   0x0000192c   0x0000000c   Code   RO          200    i.vListInitialiseItem  list.o
    0x00001938   0x00001938   0x00000060   Code   RO          201    i.vListInsert       list.o
    0x00001998   0x00001998   0x00000030   Code   RO          202    i.vListInsertEnd    list.o
    0x000019c8   0x000019c8   0x00000028   Code   RO          823    i.vNonPreemptiveTick  port.o
    0x000019f0   0x000019f0   0x00000028   Code   RO          825    i.vPortEnterCritical  port.o
    0x00001a18   0x00001a18   0x00000048   Code   RO          826    i.vPortExitCritical  port.o
    0x00001a60   0x00001a60   0x00000078   Code   RO          785    i.vPortFree         heap_2.o
    0x00001ad8   0x00001ad8   0x000000b0   Code   RO          155    i.vSerialPutString  serial.o
    0x00001b88   0x00001b88   0x00000040   Code   RO          425    i.vTaskDelay        tasks.o
    0x00001bc8   0x00001bc8   0x00000024   Code   RO          430    i.vTaskInternalSetTimeOutState  tasks.o
    0x00001bec   0x00001bec   0x00000014   Code   RO          431    i.vTaskMissedYield  tasks.o
    0x00001c00   0x00001c00   0x00000038   Code   RO          432    i.vTaskPlaceOnEventList  tasks.o
    0x00001c38   0x00001c38   0x00000098   Code   RO          441    i.vTaskStartScheduler  tasks.o
    0x00001cd0   0x00001cd0   0x0000001c   Code   RO          443    i.vTaskSuspendAll   tasks.o
    0x00001cec   0x00001cec   0x000000cc   Code   RO          444    i.vTaskSwitchContext  tasks.o
    0x00001db8   0x00001db8   0x00000108   Code   RO          156    i.vUART_ISRHandler  serial.o
    0x00001ec0   0x00001ec0   0x00000018   Code   RO          827    i.xPortStartScheduler  port.o
    0x00001ed8   0x00001ed8   0x00000054   Code   RO          250    i.xQueueGenericCreate  queue.o
    0x00001f2c   0x00001f2c   0x000000b0   Code   RO          251    i.xQueueGenericReset  queue.o
    0x00001fdc   0x00001fdc   0x00000168   Code   RO          252    i.xQueueGenericSend  queue.o
    0x00002144   0x00002144   0x00000160   Code   RO          259    i.xQueueReceive     queue.o
    0x000022a4   0x000022a4   0x000000d0   Code   RO          158    i.xSerialPortInitMinimal  serial.o
    0x00002374   0x00002374   0x00000010   Code   RO          159    i.xSerialPutChar    serial.o
    0x00002384   0x00002384   0x000000b0   Code   RO          447    i.xTaskCheckForTimeOut  tasks.o
    0x00002434   0x00002434   0x000000ac   Code   RO          448    i.xTaskCreate       tasks.o
    0x000024e0   0x000024e0   0x0000018c   Code   RO          459    i.xTaskIncrementTick  tasks.o
    0x0000266c   0x0000266c   0x000000ac   Code   RO          460    i.xTaskPriorityDisinherit  tasks.o
    0x00002718   0x00002718   0x000000cc   Code   RO          462    i.xTaskRemoveFromEventList  tasks.o
    0x000027e4   0x000027e4   0x0000016c   Code   RO          463    i.xTaskResumeAll    tasks.o
    0x00002950   0x00002950   0x00000019   Data   RO           70    .constdata          main.o
    0x00002969   0x00002969   0x00000003   PAD
    0x0000296c   0x0000296c   0x00000020   Data   RO         1073    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x40000000, Load base: 0x0000298c, Size: 0x00003cd0, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x0000298c   0x0000005c   Data   RW           52    .data               gpio_cfg.o
    0x4000005c   0x000029e8   0x00000014   Data   RW           71    .data               main.o
    0x40000070   0x000029fc   0x00000004   Data   RW          161    .data               serial.o
    0x40000074   0x00002a00   0x00000040   Data   RW          466    .data               tasks.o
    0x400000b4   0x00002a40   0x00000018   Data   RW          789    .data               heap_2.o
    0x400000cc   0x00002a58   0x00000004   Data   RW          828    .data               port.o
    0x400000d0        -       0x000000c8   Zero   RW          160    .bss                serial.o
    0x40000198        -       0x000000b4   Zero   RW          465    .bss                tasks.o
    0x4000024c        -       0x00003400   Zero   RW          788    .bss                heap_2.o
    0x4000364c        -       0x00000060   Zero   RW          945    .bss                c_t.l(libspace.o)
    0x400036ac   0x00002a5c   0x00000004   PAD
    0x400036b0        -       0x00000000   Zero   RW            2    HEAP                startup.o
    0x400036b0        -       0x00000620   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       452         16          0          0          0       6020   gpio.o
         0          0          0         92          0       1003   gpio_cfg.o
       568         40          0         24      13312       3587   heap_2.o
       276          0          0          0          0       3090   list.o
       908        216         25         20          0      19149   main.o
       548         44          0          4          0       4620   port.o
       396         24          0          0          0        324   portasm.o
      1716          0          0          0          0      11175   queue.o
       664         56          0          4        200       4257   serial.o
       148         12          0          0          0        224   serialisr.o
       292         60          0          0       1568        516   startup.o
      3196        280          0         64        180      22701   tasks.o

    ----------------------------------------------------------------------
      9164        748         60        208      15260      76666   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          3          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        44          4          0          0          0          0   __rtentry2.o
         8          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
       420          0          0          0          0        148   aeabi_sdiv.o
        20          0          0          0          0         80   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
        64          0          0          0          0         68   rt_memclr.o
        84          0          0          0          0         80   rt_memclr_w.o
       212          0          0          0          0         68   rt_memcpy.o
       100          0          0          0          0         80   rt_memcpy_w.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        88          6          0          0          0         76   strcpy.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1412         26          0          0        100       1148   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1406         26          0          0         96       1148   c_t.l

    ----------------------------------------------------------------------
      1412         26          0          0        100       1148   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     10576        774         60        208      15360      74610   Grand Totals
     10576        774         60        208      15360      74610   ELF Image Totals
     10576        774         60        208          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10636 (  10.39kB)
    Total RW  Size (RW Data + ZI Data)             15568 (  15.20kB)
    Total ROM Size (Code + RO Data + RW Data)      10844 (  10.59kB)

==============================================================================

